// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+j",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+h",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+k",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+j",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+h",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+i",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+i",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+u",
        "command": "cursorWordEndLeft",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+shift+u",
        "command": "cursorWordEndLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+[Period]",
        "command": "cursorEnd",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "shift+cmd+[Period]",
        "command": "cursorEndSelect",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "cmd+[Comma]",
        "command": "cursorHome",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "shift+cmd+[Comma]",
        "command": "cursorHomeSelect",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "cmd+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.gotoSymbol",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+5",
        "command": "editor.action.quickFix",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+-",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+[IntlBackslash]",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+alt+cmd+[Backslash]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k v",
        "command": "-markdown.extension.closePreviewToSide",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "cmd+y",
        "command": "markdown.extension.togglePreview",
        "when": "!terminalFocus"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown.extension.togglePreview",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+o",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+home",
        "command": "-cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+left",
        "command": "-cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+m",
        "command": "references-view.removeCallItem"
    },
    {
        "key": "cmd+[Equal]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "cmd+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "cmd+e",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+b",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "shift+cmd+[BracketRight]",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "cmd+k ctrl+alt+cmd+[IntlBackslash]",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+alt+cmd+[IntlBackslash]",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "alt+cmd+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+y",
        "command": "workbench.action.splitEditorToRightGroup"
    },
    {
        "key": "cmd+[Semicolon]",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+cmd+1",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+[Semicolon]",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+cmd+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+cmd+j",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+k",
        "command": "cursorTop",
        "when": "textInputFocus"
    }
]